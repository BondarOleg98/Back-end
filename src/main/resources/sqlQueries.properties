#User
user.findByUsername = SELECT * FROM users WHERE email = ?
user.findByUserId = SELECT * FROM users WHERE user_id = ?
user.create = INSERT INTO users (full_name, password, email, creation_time, enabled, photo_path) VALUES(?, ?, ?, ?, ?, ?)
user.update = UPDATE users SET full_name = ?, email = ?, password = ?, creation_time = ?, enabled = ?, photo_path = ? WHERE user_id = ? AND full_name = ? AND email = ? AND password = ? AND creation_time = ? AND enabled = ? AND photo_path = ?
user.delete = DELETE FROM users WHERE user_id = ? AND full_name = ? AND email = ? AND password = ? AND creation_time = ? AND enabled = ? AND photo_path = ?
user.getByFilter = SELECT * FROM users WHERE (full_name = ? OR ?) AND (email = ? OR ?) AND (password = ? OR ?) AND (creation_time = ? OR ?) AND (enabled = ? OR ?) AND (photo_path = ? OR ?) LIMIT ? OFFSET ?
user.updateByFilter = UPDATE users SET full_name = (CASE WHEN ? THEN ? ELSE full_name END), email = (CASE WHEN ? THEN ? ELSE email END), password = (CASE WHEN ? THEN ? ELSE password END), creation_time = (CASE WHEN ? THEN ? ELSE creation_time END), enabled = (CASE WHEN ? THEN ? ELSE enabled END), photo_path = (CASE WHEN ? THEN ? ELSE photo_path END) WHERE (full_name = ? OR ?) AND (email = ? OR ?) AND (password = ? OR ?) AND (creation_time = ? OR ?) AND (enabled = ? OR ?) AND (photo_path = ? OR ?)
user.deleteByFilter = DELETE FROM users WHERE (full_name = ? OR ?) AND (email = ? OR ?) AND (password = ? OR ?) AND (creation_time = ? OR ?) AND (enabled = ? OR ?) AND (photo_path = ? OR ?)

spring.queries.create.authorizationLinks = INSERT INTO authorization_links (token, expiration, user_id, is_registration_token, used) VALUES(?, ?, ?, ?, ?)
spring.queries.find.authorizationLink = SELECT * FROM authorization_links WHERE token=?
spring.queries.update.authorizationLinks = UPDATE authorization_links SET used = ? WHERE token = ?

#Announcement
announcements.getById = SELECT * FROM ANNOUNCEMENTS WHERE ANNOUNCEMENT_ID = ?
announcements.select=SELECT * FROM ANNOUNCEMENTS ORDER BY CREATION_TIME DESC LIMIT ? OFFSET ?
announcements.count=SELECT COUNT(*) FROM ANNOUNCEMENTS
announcements.insert = INSERT INTO ANNOUNCEMENTS(TITLE, DESCRIPTION, USER_ID, PUBLISHED, BOOK_ID) VALUES(?, ?, ?, ?, ?)
announcements.update = UPDATE ANNOUNCEMENTS SET TITLE = ?, DESCRIPTION = ?, USER_ID = ?, PUBLISHED = ?, BOOK_ID = ? WHERE ANNOUNCEMENT_ID = ?
announcements.delete = DELETE FROM ANNOUNCEMENTS WHERE ANNOUNCEMENT_ID = ?
announcements.publish = UPDATE ANNOUNCEMENTS SET PUBLISHED = true WHERE ANNOUNCEMENT_ID = ?
announcements.unPublish = UPDATE ANNOUNCEMENTS SET PUBLISHED = false WHERE ANNOUNCEMENT_ID = ?

#Books
books.getById = SELECT * FROM BOOKS WHERE BOOK_ID = ?
books.insert = INSERT INTO BOOKS(TITLE, ISBN, RELEASE, PAGES, FILE_PATH, PHOTO_PATH, PUBLISHING_HOUSE, RATE_SUM, VOTERS_COUNT, SLUG) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
books.update = UPDATE books SET TITLE = ?, ISBN = ?, RELEASE = ?, PAGES = ?, FILE_PATH = ?, PHOTO_PATH = ?, PUBLISHING_HOUSE = ?, RATE_SUM = ?, VOTERS_COUNT = ?, SLUG = ? WHERE BOOK_ID = ?
books.delete = DELETE FROM BOOKS WHERE BOOK_ID = ?
books.countFiltered = SELECT COUNT(*) FROM BOOKS WHERE TITLE LIKE '%' || COALESCE(?, TITLE) || '%' AND BOOK_ID IN (SELECT BOOK_ID FROM BOOKS_GENRES WHERE GENRE_ID = COALESCE(?, GENRE_ID)) AND BOOK_ID IN (SELECT BOOK_ID FROM BOOKS_AUTHORS WHERE AUTHOR_ID = COALESCE(?, AUTHOR_ID)) AND RELEASE = COALESCE(?, RELEASE)
books.getFiltered = SELECT * FROM BOOKS WHERE TITLE LIKE '%' || COALESCE(?, TITLE) || '%' AND BOOK_ID IN (SELECT BOOK_ID FROM BOOKS_GENRES WHERE GENRE_ID = COALESCE(?, GENRE_ID)) AND BOOK_ID IN (SELECT BOOK_ID FROM BOOKS_AUTHORS WHERE AUTHOR_ID = COALESCE(?, AUTHOR_ID)) AND RELEASE = COALESCE(?, RELEASE) LIMIT ? OFFSET ?

#BooksGenres
books_genres.insert = INSERT INTO BOOKS_GENRES(BOOK_ID, GENRE_ID) VALUES(?, ?)
books_genres.delete = DELETE FROM BOOKS_GENRES WHERE BOOK_ID = ? AND GENRE_ID = ?

#BooksAuthors
books_authors.insert = INSERT INTO BOOKS_AUTHORS(BOOK_ID, AUTHOR_ID) VALUES(?, ?)
books_authors.delete = DELETE FROM BOOKS_AUTHORS WHERE BOOK_ID = ? AND AUTHOR_ID = ?

#Genres
genres.getById = SELECT * FROM GENRES WHERE GENRE_ID = ?
genres.insert = INSERT INTO GENRES(NAME, DESCRIPTION) VALUES(?, ?)
genres.update = UPDATE GENRES SET NAME = ?, DESCRIPTION = ? WHERE GENRE_ID = ?
genres.delete = DELETE FROM GENRES WHERE GENRE_ID = ?
genres.getByBook = SELECT * FROM GENRES WHERE GENRE_ID IN (SELECT GENRE_ID FROM BOOKS_GENRES WHERE BOOK_ID = ?)

#Authors
authors.getById = SELECT * FROM AUTHORS WHERE AUTHOR_ID = ?
authors.insert = INSERT INTO AUTHORS(FULL_NAME, DESCRIPTION) VALUES(?, ?)
authors.update = UPDATE AUTHORS SET FULL_NAME = ?, DESCRIPTION = ? WHERE AUTHOR_ID = ?
authors.delete = DELETE FROM AUTHORS WHERE AUTHOR_ID = ?
authors.getByBook = SELECT * FROM AUTHORS WHERE AUTHOR_ID IN (SELECT AUTHOR_ID FROM BOOKS_AUTHORS WHERE BOOK_ID = ?)
