#User
user.findByEmail=SELECT * FROM users WHERE email = ?
user.activate=UPDATE users SET enabled = ? WHERE user_id = ? AND email = ? AND password = ?
user.getById=SELECT * FROM users WHERE user_id = ?
user.insert=INSERT INTO users (full_name, password, email, creation_time, enabled, photo_path) VALUES(?, ?, ?, ?, ?, ?)
user.update=UPDATE users SET password = coalesce(?, password), email = coalesce(?, email), enabled = coalesce(?, false), photo_path = coalesce(?, photo_path), full_name = coalesce(?, full_name) WHERE user_id = ?
user.delete=DELETE FROM users WHERE user_id = ?
user.deleteByEmail=DELETE FROM users WHERE email = ?
#Role
role.findByRoleName = SELECT * FROM roles WHERE name = ?
role.findByRoleId   = SELECT * FROM roles WHERE role_id = ?
role.create         = INSERT INTO roles (name, description) VALUES(?, ?)
role.update         = UPDATE roles SET name = ?, description = ? WHERE role_id = ? AND name = ? AND description = ?
role.delete         = DELETE FROM roles WHERE role_id = ?
role.findByUserId   = SELECT roles.name, roles.role_id, roles.description FROM users_roles, roles WHERE user_id = ? AND users_roles.role_id = roles.role_id

#UserRole
roleUser.create = INSERT INTO users_roles (user_id, role_id) VALUES(?, ?)
roleUser.update = UPDATE users_roles SET role_id = ? WHERE user_id = ?
roleUser.deleteUserId = DELETE FROM users_roles WHERE user_id = ?
roleUser.deleteRoleId = DELETE FROM users_roles WHERE role_id = ?
roleUser.findByUserId = SELECT * FROM users_roles WHERE user_id = ?

#Announcement
announcements.getById=SELECT * FROM ANNOUNCEMENTS WHERE ANNOUNCEMENT_ID = ?
announcements.select=SELECT * FROM ANNOUNCEMENTS ORDER BY CREATION_TIME DESC LIMIT ? OFFSET ?
announcements.selectAllPublished=SELECT * FROM ANNOUNCEMENTS WHERE published=true ORDER BY CREATION_TIME DESC LIMIT ? OFFSET ?
announcements.count=SELECT COUNT(*) FROM ANNOUNCEMENTS
announcements.countPublished=SELECT COUNT(*) FROM ANNOUNCEMENTS WHERE published=true
announcements.insert=INSERT INTO ANNOUNCEMENTS(TITLE, DESCRIPTION, USER_ID, BOOK_ID) VALUES(?, ?, ?, ?)
announcements.update=UPDATE ANNOUNCEMENTS SET TITLE = ?, DESCRIPTION = ?, USER_ID = ?, BOOK_ID = ? WHERE ANNOUNCEMENT_ID = ?
announcements.delete=DELETE FROM ANNOUNCEMENTS WHERE ANNOUNCEMENT_ID = ?
announcements.publish=UPDATE ANNOUNCEMENTS SET PUBLISHED = true WHERE ANNOUNCEMENT_ID = ?
announcements.unPublish=UPDATE ANNOUNCEMENTS SET PUBLISHED = false WHERE ANNOUNCEMENT_ID = ?
#link
authorizationLink.create=INSERT INTO authorization_links (token, expiration, user_id, is_registration_token, used) VALUES(?, ?, ?, ?, ?)
authorizationLink.findByToken=SELECT * FROM authorization_links WHERE token=?
authorizationLink.findByUserId=SELECT * FROM authorization_links WHERE user_id=?
authorizationLink.update=UPDATE authorization_links SET used = ? WHERE token = ?
#Books
books.getById=SELECT * FROM BOOKS WHERE BOOK_ID = ?
books.insert=INSERT INTO BOOKS(TITLE, ISBN, RELEASE, PAGES, FILE_PATH, PHOTO_PATH, PUBLISHING_HOUSE, RATE_SUM, VOTERS_COUNT, SLUG) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
books.update=UPDATE books SET TITLE = ?, ISBN = ?, RELEASE = ?, PAGES = ?, FILE_PATH = ?, PHOTO_PATH = ?, PUBLISHING_HOUSE = ?, RATE_SUM = ?, VOTERS_COUNT = ?, SLUG = ? WHERE BOOK_ID = ?
books.delete=DELETE FROM BOOKS WHERE BOOK_ID = ?
books.countFiltered=SELECT COUNT(*) FROM BOOKS WHERE TITLE LIKE '%' || COALESCE(?, TITLE) || '%' AND BOOK_ID IN (SELECT BOOK_ID FROM BOOKS_GENRES WHERE GENRE_ID = COALESCE(?, GENRE_ID)) AND BOOK_ID IN (SELECT BOOK_ID FROM BOOKS_AUTHORS WHERE AUTHOR_ID = COALESCE(?, AUTHOR_ID)) AND RELEASE = COALESCE(?, RELEASE)
books.getFiltered=SELECT * FROM BOOKS WHERE TITLE LIKE '%' || COALESCE(?, TITLE) || '%' AND BOOK_ID IN (SELECT BOOK_ID FROM BOOKS_GENRES WHERE GENRE_ID = COALESCE(?, GENRE_ID)) AND BOOK_ID IN (SELECT BOOK_ID FROM BOOKS_AUTHORS WHERE AUTHOR_ID = COALESCE(?, AUTHOR_ID)) AND RELEASE = COALESCE(?, RELEASE) LIMIT ? OFFSET ?
books.getBySlug=SELECT * FROM BOOKS WHERE SLUG = ?

#BooksGenres
books_genres.insert=INSERT INTO BOOKS_GENRES(BOOK_ID, GENRE_ID) VALUES(?, ?)
books_genres.delete=DELETE FROM BOOKS_GENRES WHERE BOOK_ID = ? AND GENRE_ID = ?
#BooksAuthors
books_authors.insert=INSERT INTO BOOKS_AUTHORS(BOOK_ID, AUTHOR_ID) VALUES(?, ?)
books_authors.delete=DELETE FROM BOOKS_AUTHORS WHERE BOOK_ID = ? AND AUTHOR_ID = ?
#Genres
genres.getById=SELECT * FROM GENRES WHERE GENRE_ID = ?
genres.insert=INSERT INTO GENRES(NAME, DESCRIPTION) VALUES(?, ?)
genres.update=UPDATE GENRES SET NAME = ?, DESCRIPTION = ? WHERE GENRE_ID = ?
genres.delete=DELETE FROM GENRES WHERE GENRE_ID = ?
genres.getAll=SELECT * FROM GENRES;
genres.getByBook=SELECT * FROM GENRES WHERE GENRE_ID IN (SELECT GENRE_ID FROM BOOKS_GENRES WHERE BOOK_ID = ?)
genres.searchByNameContains=SELECT * FROM genres WHERE LOWER(name) LIKE LOWER(?)
genres.getStats=SELECT G.genre_id AS GENRE, COUNT(G.genre_id) AS COUNT FROM ((SELECT B.book_id FROM books B INNER JOIN searching_history SH ON B.book_id = SH.book_id INNER JOIN users U ON SH.user_id = U.user_id WHERE U.user_id = ?) UNION ALL (SELECT B.book_id FROM books B INNER JOIN users_books UB ON B.book_id = UB.book_id INNER JOIN users U ON UB.user_id = U.user_id WHERE UB.favorite AND U.user_id = ?)) B INNER JOIN books_genres BG ON B.book_id = BG.book_id INNER JOIN genres G ON BG.genre_id = G.genre_id GROUP BY G.genre_id
#Authors
authors.getById=SELECT * FROM AUTHORS WHERE AUTHOR_ID = ?
authors.insert=INSERT INTO AUTHORS(FULL_NAME, DESCRIPTION) VALUES(?, ?)
authors.update=UPDATE AUTHORS SET FULL_NAME = ?, DESCRIPTION = ? WHERE AUTHOR_ID = ?
authors.delete=DELETE FROM AUTHORS WHERE AUTHOR_ID = ?
authors.getAll=SELECT * FROM AUTHORS;
authors.getByBook=SELECT * FROM AUTHORS WHERE AUTHOR_ID IN (SELECT AUTHOR_ID FROM BOOKS_AUTHORS WHERE BOOK_ID = ?)
authors.searchByFullNameContains=SELECT * FROM authors WHERE LOWER(full_name) LIKE LOWER(?)
authors.getStats=SELECT A.author_id AS AUTHOR, COUNT(A.author_id) AS COUNT FROM ((SELECT B.book_id FROM books B INNER JOIN searching_history SH ON B.book_id = SH.book_id INNER JOIN users U ON SH.user_id = U.user_id WHERE U.user_id = ?) UNION ALL (SELECT B.book_id FROM books B INNER JOIN users_books UB ON B.book_id = UB.book_id INNER JOIN users U ON UB.user_id = U.user_id WHERE UB.favorite AND U.user_id = ?)) B INNER JOIN books_authors BA ON B.book_id = BA.book_id INNER JOIN authors A ON BA.author_id = A.author_id GROUP BY A.author_id
#BookReviews
book_reviews.getById = SELECT * FROM book_reviews WHERE book_review_id = ?
book_reviews.insert = INSERT INTO book_reviews (rating, description, user_id, book_id) VALUES(?, ?, ?, ?)
book_reviews.update = UPDATE book_reviews SET rating = ?, description = ?, published = ? WHERE book_review_id = ?
book_reviews.delete = DELETE from book_reviews WHERE book_review_id = ?
book_reviews.avgRating = SELECT AVG(br.rating) FROM book_reviews br WHERE book_id = ?
book_reviews.countByUserIdBookId = SELECT COUNT(*) FROM book_reviews WHERE user_id = coalesce(?, user_id) AND book_id = coalesce(?, book_id)
book_reviews.getPage = SELECT * FROM book_reviews WHERE book_id = ? ORDER BY creation_time DESC LIMIT ? OFFSET ?

# Publishing houses
publishingHouses.getAll = SELECT * FROM publishing_houses;

#BookOverviews
book_overviews.getById = SELECT * FROM BOOK_OVERVIEWS WHERE BOOK_OVERVIEW_ID = ?
book_overviews.countByBook = SELECT COUNT(*) FROM BOOK_OVERVIEWS WHERE BOOK_ID = ?
book_overviews.getByBook = SELECT * FROM BOOK_OVERVIEWS WHERE BOOK_ID = ? LIMIT ? OFFSET ?
book_overviews.getPublishedByBook = SELECT * FROM BOOK_OVERVIEWS WHERE BOOK_ID = ? AND PUBLISHED = TRUE
book_overviews.insert = INSERT INTO book_overviews (description, user_id, book_id) VALUES (?, ?, ?)
book_overviews.update = UPDATE book_overviews SET description = ?, user_id = ?, book_id = ? WHERE book_overview_id = ?
book_overviews.delete = DELETE FROM book_overviews WHERE book_overview_id = ?

#ReviewComments
review_comments.getById = SELECT * FROM review_comments WHERE comment_id = ?
review_comments.insert = INSERT INTO review_comments (author_id, book_review_id, content, creation_time) VALUES(?, ?, ?, ?)
review_comments.update = UPDATE review_comments SET author_id = ?, book_review_id = ?, content = ? WHERE comment_id = ?
review_comments.delete = DELETE from review_comments WHERE comment_id = ?
review_comments.getPage = SELECT * FROM review_comments WHERE book_review_id = ? ORDER BY creation_time DESC LIMIT ? OFFSET ?
review_comments.countByBookReviewId = SELECT COUNT(*) FROM review_comments WHERE book_review_id = ?

#UserBooks
user_book.getById = SELECT * FROM users_books WHERE users_books_id = ?
user_book.insert  = INSERT INTO users_books (users_books_id, book_id, user_id, favorite, read, creation_time) VALUES(?, ?, ?, ?, ?, ?)
user_book.update  = UPDATE users_books SET book_id = ?, user_id = ?, favorite = ?, read = ?, creation_time = ? WHERE users_books_id = ?
user_book.delete  = DELETE from users_books WHERE users_books_id = ?
user_book.getPage = SELECT * FROM users_books WHERE user_id = ? ORDER BY creation_time DESC LIMIT ? OFFSET ?
user_book.countByUserId = SELECT COUNT(*) FROM users_books WHERE user_id = ?

#BooksSelection
booksSelection.select=SELECT * FROM BOOKS_SELECTION
booksSelection.insert=INSERT INTO BOOKS_SELECTION (SELECT * FROM BOOKS ORDER BY RANDOM() LIMIT ?)
booksSelection.clear=TRUNCATE TABLE BOOKS_SELECTION

#BooksRecommendations
booksRecommendations.insert=INSERT INTO BOOKS_RECOMMENDATIONS(BOOK_ID, TITLE, ISBN, RELEASE, PAGES, FILE_PATH, PHOTO_PATH, PUBLISHING_HOUSE, RATE_SUM, VOTERS_COUNT, SLUG) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
booksRecommendations.clear=TRUNCATE TABLE BOOKS_RECOMMENDATIONS
booksRecommendations.count=SELECT COUNT(*) FROM BOOKS_RECOMMENDATIONS
booksRecommendations.select=SELECT * FROM BOOKS_RECOMMENDATIONS LIMIT ? OFFSET ?

#SearchingHistory
searchingHistory.insert=INSERT INTO SEARCHING_HISTORY(BOOK_ID, USER_ID) VALUES(?, ?)
