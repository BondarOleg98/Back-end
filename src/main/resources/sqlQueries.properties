#User
user.findByEmail = SELECT * FROM users WHERE email = ?
user.activate    = UPDATE users SET enabled = ? WHERE user_id = ? AND email = ? AND password = ?
user.getById     = SELECT * FROM users WHERE user_id = ?
user.insert      = INSERT INTO users (full_name, password, email, creation_time, enabled, photo_path) VALUES(?, ?, ?, ?, ?, ?)
user.update      = UPDATE users SET full_name = ?, password = ?, email = ?, creation_time = ?, enabled = ?, photo_path = ? WHERE user_id = ?
user.delete      = DELETE FROM users WHERE user_id = ?

#Role
role.findByRoleName = SELECT * FROM roles WHERE name = ?
role.findByRoleId = SELECT * FROM roles WHERE role_id = ?
role.create = INSERT INTO roles (name, description) VALUES(?, ?)
role.update = UPDATE roles SET name = ?, description = ? WHERE role_id = ? AND name = ? AND description = ?
role.delete = DELETE FROM roles WHERE role_id = ? AND name = ? AND description = ?

#UserRole
roleUser.create = INSERT INTO users_roles (user_id, role_id) VALUES(?, ?)
roleUser.update = UPDATE users_roles SET user_id = ? WHERE role_id = ?
roleUser.delete = DELETE FROM users_roles WHERE user_id = ?
roleUser.findByUserRoleId = SELECT * FROM users_roles WHERE user_id = ?

#Announcement
announcements.getById = SELECT * FROM ANNOUNCEMENTS WHERE ANNOUNCEMENT_ID = ?
announcements.select=SELECT * FROM ANNOUNCEMENTS ORDER BY CREATION_TIME DESC LIMIT ? OFFSET ?
announcements.count=SELECT COUNT(*) FROM ANNOUNCEMENTS
announcements.insert = INSERT INTO ANNOUNCEMENTS(TITLE, DESCRIPTION, USER_ID, BOOK_ID) VALUES(?, ?, ?, ?)
announcements.update = UPDATE ANNOUNCEMENTS SET TITLE = ?, DESCRIPTION = ?, USER_ID = ?, BOOK_ID = ? WHERE ANNOUNCEMENT_ID = ?
announcements.delete = DELETE FROM ANNOUNCEMENTS WHERE ANNOUNCEMENT_ID = ?
announcements.publish = UPDATE ANNOUNCEMENTS SET PUBLISHED = true WHERE ANNOUNCEMENT_ID = ?
announcements.unPublish = UPDATE ANNOUNCEMENTS SET PUBLISHED = false WHERE ANNOUNCEMENT_ID = ?

#link
authorizationLink.create = INSERT INTO authorization_links (token, expiration, user_id, is_registration_token, used) VALUES(?, ?, ?, ?, ?)
authorizationLink.findByToken = SELECT * FROM authorization_links WHERE token=?
authorizationLink.findByUserId = SELECT * FROM authorization_links WHERE user_id=?
authorizationLink.update = UPDATE authorization_links SET used = ? WHERE token = ?

#Books
books.getById = SELECT * FROM BOOKS WHERE BOOK_ID = ?
books.insert = INSERT INTO BOOKS(TITLE, ISBN, RELEASE, PAGES, FILE_PATH, PHOTO_PATH, PUBLISHING_HOUSE, RATE_SUM, VOTERS_COUNT, SLUG) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
books.update = UPDATE books SET TITLE = ?, ISBN = ?, RELEASE = ?, PAGES = ?, FILE_PATH = ?, PHOTO_PATH = ?, PUBLISHING_HOUSE = ?, RATE_SUM = ?, VOTERS_COUNT = ?, SLUG = ? WHERE BOOK_ID = ?
books.delete = DELETE FROM BOOKS WHERE BOOK_ID = ?
books.countFiltered = SELECT COUNT(*) FROM BOOKS WHERE TITLE LIKE '%' || COALESCE(?, TITLE) || '%' AND BOOK_ID IN (SELECT BOOK_ID FROM BOOKS_GENRES WHERE GENRE_ID = COALESCE(?, GENRE_ID)) AND BOOK_ID IN (SELECT BOOK_ID FROM BOOKS_AUTHORS WHERE AUTHOR_ID = COALESCE(?, AUTHOR_ID)) AND RELEASE = COALESCE(?, RELEASE)
books.getFiltered = SELECT * FROM BOOKS WHERE TITLE LIKE '%' || COALESCE(?, TITLE) || '%' AND BOOK_ID IN (SELECT BOOK_ID FROM BOOKS_GENRES WHERE GENRE_ID = COALESCE(?, GENRE_ID)) AND BOOK_ID IN (SELECT BOOK_ID FROM BOOKS_AUTHORS WHERE AUTHOR_ID = COALESCE(?, AUTHOR_ID)) AND RELEASE = COALESCE(?, RELEASE) LIMIT ? OFFSET ?
books.getBySlug = SELECT * FROM BOOKS WHERE SLUG = ?

#BooksGenres
books_genres.insert = INSERT INTO BOOKS_GENRES(BOOK_ID, GENRE_ID) VALUES(?, ?)
books_genres.delete = DELETE FROM BOOKS_GENRES WHERE BOOK_ID = ? AND GENRE_ID = ?

#BooksAuthors
books_authors.insert = INSERT INTO BOOKS_AUTHORS(BOOK_ID, AUTHOR_ID) VALUES(?, ?)
books_authors.delete = DELETE FROM BOOKS_AUTHORS WHERE BOOK_ID = ? AND AUTHOR_ID = ?

#Genres
genres.getById = SELECT * FROM GENRES WHERE GENRE_ID = ?
genres.insert = INSERT INTO GENRES(NAME, DESCRIPTION) VALUES(?, ?)
genres.update = UPDATE GENRES SET NAME = ?, DESCRIPTION = ? WHERE GENRE_ID = ?
genres.delete = DELETE FROM GENRES WHERE GENRE_ID = ?
genres.getAll = SELECT * FROM GENRES;
genres.getByBook = SELECT * FROM GENRES WHERE GENRE_ID IN (SELECT GENRE_ID FROM BOOKS_GENRES WHERE BOOK_ID = ?)

#Authors
authors.getById = SELECT * FROM AUTHORS WHERE AUTHOR_ID = ?
authors.insert = INSERT INTO AUTHORS(FULL_NAME, DESCRIPTION) VALUES(?, ?)
authors.update = UPDATE AUTHORS SET FULL_NAME = ?, DESCRIPTION = ? WHERE AUTHOR_ID = ?
authors.delete = DELETE FROM AUTHORS WHERE AUTHOR_ID = ?
authors.getAll = SELECT * FROM AUTHORS;
authors.getByBook = SELECT * FROM AUTHORS WHERE AUTHOR_ID IN (SELECT AUTHOR_ID FROM BOOKS_AUTHORS WHERE BOOK_ID = ?)

#BookReviews
book_reviews.getById = SELECT * FROM book_reviews WHERE book_review_id = ?
book_reviews.insert = INSERT INTO book_reviews (rating, description, user_id, book_id) VALUES(?, ?, ?, ?)
book_reviews.update = UPDATE book_reviews SET rating = ?, description = ?, published = ? WHERE book_review_id = ?
book_reviews.delete = DELETE from book_reviews WHERE book_review_id = ?
book_reviews.avgRating = SELECT AVG(br.rating) FROM book_reviews br WHERE book_id = ?
book_reviews.countByUserIdBookId = SELECT COUNT(*) FROM book_reviews WHERE user_id = coalesce(?, user_id) AND book_id = coalesce(?, book_id)
book_reviews.getPage = SELECT * FROM book_reviews WHERE book_id = ? LIMIT ? OFFSET ?